<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_grey</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar mouseClickX;
mouseClickX = 0;

globalvar mouseClickY;
mouseClickY = 0;

globalvar nOptions;
nOptions = 0;

globalvar menu_txt_arr;
globalvar menu_act_arr;
globalvar current_tile;

current_tile = 0

//Get that adjacency son

adj_right = 0
adj_left = 0
adj_up = 0
adj_down = 0



adj_right = instance_position(id.x + 125, id.y, oTile)
if adj_right == -4 
    adj_right = 100012
adj_left = instance_position(id.x + -125, id.y, oTile)
if adj_left == -4 
    adj_left = 100012
adj_up = instance_position(id.x , id.y - 125, oTile)
if adj_up == -4 
    adj_up = 100012
adj_down = instance_position(id.x , id.y + 125, oTile)
if adj_down == -4 
    adj_down = 100012

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creates a menu when right clicking on a tile

if (mouse_check_button_pressed(mb_right) &amp;&amp;
        (mouse_x &gt; bbox_left &amp;&amp; mouse_x &lt; bbox_right &amp;&amp;
            mouse_y &gt; bbox_top &amp;&amp; mouse_y &lt; bbox_bottom)){

    mouseClickX = mouse_x;
    mouseClickY = mouse_y;
    instance_create(mouseClickX, mouseClickY, oMenu);
    current_tile = id;
    
}    

// Destroys the menu when clicking outside of it (this method is completely ridiculous)

if ((mouse_check_button_pressed(mb_any) 
        &amp;&amp; ((mouse_x &lt; mouseClickX || mouse_x &gt; (mouseClickX + (zoom * 110)))
            || (mouse_y &lt; mouseClickY || mouse_y &gt; (mouseClickY + nOptions * (zoom * 45) ))))
                || keyboard_check_pressed(vk_escape)){
    
    with(oMenu)
        instance_destroy();
        
}

// Dynamically generates the options for the menu depending on the tile clicked on

nOptions = 0;

scr_options(spr_grey, "Turn Grey", scr_grey);
scr_options(spr_blue, "Turn Blue", scr_blue);
scr_options(spr_green, "Turn Green", scr_green);
//scr_options(spr_red, "Turn Red", scr_red);
if ((current_tile.sprite_index!=spr_red) &amp;&amp; (current_tile.adj_up.sprite_index != spr_blue)) { 
        nOptions +=1
        menu_txt_arr[nOptions]="Turn Red"
        menu_act_arr[nOptions]=scr_red


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
